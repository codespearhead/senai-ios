-- MySQL Script generated by MySQL Workbench
-- Fri Jan  5 16:58:56 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';


-- -----------------------------------------------------
-- Schema senai_ios
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `senai_ios`;
CREATE SCHEMA `senai_ios` DEFAULT CHARACTER SET utf8mb4;
USE `senai_ios`;

-- -----------------------------------------------------
-- Table `senai_ios`.`pais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `senai_ios`.`pais` (
  `id` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `senai_ios`.`diretor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `senai_ios`.`diretor` (
  `id` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `senai_ios`.`filme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `senai_ios`.`filme` (
  `id` INT NOT NULL,
  `titulo` VARCHAR(45) NULL DEFAULT NULL,
  `ano_de_lancamento` SMALLINT NULL DEFAULT NULL,
  `duracao` INT NULL DEFAULT NULL,
  `trailer` TEXT NULL DEFAULT NULL,
  `genero` ENUM("Ação", "Drama", "Aventura", "Suspense", "Comédia", "Ficção") NULL DEFAULT NULL,
  `pais_id` INT NOT NULL,
  `diretor_id` INT NOT NULL,
  `imagem_id` INT NOT NULL,
  PRIMARY KEY (`id`, `pais_id`, `diretor_id`, `imagem_id`),
  INDEX `pais_de_origem_filme` (`pais_id` ASC) INVISIBLE,
  INDEX `filme_diretor` (`diretor_id` ASC) VISIBLE,
  INDEX `capa_filme_imagem` (`imagem_id` ASC) VISIBLE,
  CONSTRAINT `pais_de_origem_filme`
    FOREIGN KEY (`pais_id`)
    REFERENCES `senai_ios`.`pais` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `filme_diretor`
    FOREIGN KEY (`diretor_id`)
    REFERENCES `senai_ios`.`diretor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `capa_imagem`
    FOREIGN KEY (`imagem_id`)
    REFERENCES `senai_ios`.`imagem` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `senai_ios`.`imagem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `senai_ios`.`imagem` (
  `id` INT NOT NULL,
  `filme_id` INT NOT NULL,
  `imagem_blob` BLOB NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `filme_id`),
  /* Note que o catálogo de imagens nada mais é que uma lista
  de imagens, e o tal é único para o filme, logo o catálogo de
  imagens pode ser expresso por: filme.id <- (1-n) -> imagem.id */
  INDEX `catalogo_de_imagem` (`filme_id` ASC) VISIBLE,
  CONSTRAINT `catalogo_de_imagem`
    FOREIGN KEY (`filme_id`)
    REFERENCES `senai_ios`.`filme` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `senai_ios`.`ator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `senai_ios`.`ator` (
  `id` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `idade` SMALLINT NULL DEFAULT NULL,
  `pais_id` INT NOT NULL,
  PRIMARY KEY (`id`, `pais_id`),
  INDEX `nacionalidade_pais_ator` (`pais_id` ASC) VISIBLE,
  CONSTRAINT `nacionalidade_pais_ator`
    FOREIGN KEY (`pais_id`)
    REFERENCES `senai_ios`.`pais` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `senai_ios`.`filme_has_ator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `senai_ios`.`filme_has_ator` (
  `filme_id` INT NOT NULL,
  `ator_id` INT NOT NULL,
  PRIMARY KEY (`filme_id`, `ator_id`),
  INDEX `filme_has_ator_ator` (`ator_id` ASC) VISIBLE,
  INDEX `filme_has_ator_filme` (`filme_id` ASC) VISIBLE,
  CONSTRAINT `filme_has_ator_filme`
    FOREIGN KEY (`filme_id`)
    REFERENCES `senai_ios`.`filme` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `filme_has_ator_ator`
    FOREIGN KEY (`ator_id`)
    REFERENCES `senai_ios`.`ator` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
